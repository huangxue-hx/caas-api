<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.harmonycloud.dao.application.ServiceTemplatesMapper">
  <resultMap id="BaseResultMap" type="com.harmonycloud.dao.application.bean.ServiceTemplates">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="deployment_content" jdbcType="VARCHAR" property="deploymentContent" />
    <result column="image_list" jdbcType="VARCHAR" property="imageList" />
    <result column="ingress_content" jdbcType="VARCHAR" property="ingressContent" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="tenant" jdbcType="VARCHAR" property="tenant" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="node_selector" property="nodeSelector" jdbcType="VARCHAR" />
  </resultMap>


  <insert id="insert" parameterType="com.harmonycloud.dao.application.bean.ServiceTemplates" useGeneratedKeys="true" keyProperty="id">
    insert into service_templates (name, tag, details, image_list, ingress_content, status, tenant, user, create_time, flag, deployment_content, node_selector)
    values (#{name}, #{tag}, #{details}, #{imageList}, #{ingressContent}, #{status}, #{tenant}, #{user}, #{createTime}, #{flag}, #{deploymentContent}, #{nodeSelector})
  </insert>

  <select id="listServiceByTenant" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * FROM service_templates WHERE name =#{name} AND tenant = #{tenant} AND status=0 and flag=0
  </select>

  <select id="listNameByTenant" parameterType="java.lang.String" resultMap="BaseResultMap">
    select distinct name , image_list,tenant FROM service_templates WHERE
    <if test="name != null" >
      name like concat(concat('%',#{name}),'%') AND
    </if>
    <if test="tenant != null" >
      (tenant = #{tenant} or tenant = 'all') AND
    </if>
     status=0 and flag=0
  </select>

  <select id="listNameByImage" parameterType="java.lang.String" resultMap="BaseResultMap">
    select distinct name , tenant FROM service_templates WHERE
    <if test="name != null" >
      name like concat(concat('%',#{name}),'%') AND
    </if>
    <if test="tenant != null" >
      tenant = #{tenant} AND
    </if>
    image_list LIKE concat(concat('%',#{image}),'%') AND status=0 and flag=0
  </select>
 
   <select id="listServiceByImage" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * FROM service_templates WHERE 
      name =#{name} AND 
      tenant = #{tenant} AND image_list =#{image} AND status=0 and flag=0
  </select> 
  
  <select id="listServiceLikeImage" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * FROM service_templates WHERE 
      name =#{name} AND 
      tenant = #{tenant} AND image_list LIKE concat(concat('%',#{image}),'%') AND status=0 and flag=0
  </select> 

  <select id="listServiceMaxTagByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM service_templates where tag = (SELECT  max(tag) FROM service_templates where name = #{name} AND status=0 and flag=0) AND name = #{name} AND status=0 and flag=0
  </select>

  <select id="listByTemplateName" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM service_templates WHERE name = #{name} and tenant = #{tenant} AND status=0 and flag=0 order by tag desc
  </select>

  <select id="listIDListByTemplateName" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM service_templates WHERE name = #{name} AND status=0 and flag=0
  </select>

  <update id="deleteByName" parameterType="java.lang.String">
    update service_templates SET status = 1
    WHERE name = #{name}
  </update>

  <select id="listTenantByName" parameterType="java.lang.String" resultType="String">
    SELECT DISTINCT tenant FROM service_templates WHERE name = #{name} AND status=0
  </select>

  <select id="getSpecificService" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM service_templates WHERE name = #{name} AND tag = #{tag} AND status=0 and flag=0
  </select>

  <select id="getServiceTemplatesByID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM service_templates WHERE id = #{ID}
  </select>

  <select id="listServiceTemplate" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from service_templates where name=#{name} and flag=0
    <if test="tag!=null and tag!=''">
      and tag=#{tag}
    </if>
    order by tag desc
  </select>
  
  <select id="getExternalService" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from service_templates where name=#{name} and flag=1 and status = 0;
  </select>
  
  <select id="listSearchByImage" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT DISTINCT tenant, name, image_list FROM service_templates WHERE status=0 and flag=0
    <if test="image != null and image != ''">
    	and image_list LIKE concat(concat('%',#{image}),'%')
    </if>
    <if test="tenant != null" >
        and (tenant = #{tenant} or tenant = 'all')
    </if>
  </select>
  
  <select id="listSearchByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM service_templates WHERE status=0 and flag=0
    <if test="name != null and name != ''">
    	and name LIKE concat(concat('%',#{name}),'%')
    </if>
    <if test="tenant != null" >
        and (tenant = #{tenant} or tenant = 'all')
    </if>
  </select>
  
  <delete id="deleteByTenant">
    delete from service_templates where tenant in
   	  <foreach item="item" index="index" collection="tenant" open="(" separator="," close=")">  
       	#{item}
      </foreach> 
  </delete>
  
    <delete id="deleteById">
    delete from service_templates where id = #{id}
  </delete>
  <update id="updateServiceTemplate">
    update service_templates
    <set>
        details = #{details},
      <if test="deploymentContent != null">
        deployment_content = #{deploymentContent},
      </if>
      <if test="user != null">
        user = #{user},
      </if>
      <if test="imageList != null">
        image_list = #{imageList},
      </if>
        ingress_content = #{ingressContent},
        node_selector = #{nodeSelector},
    </set>
    where id = #{id}
  </update>
</mapper>
