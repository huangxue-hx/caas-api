<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.harmonycloud.dao.ci.JobBuildMapper">
    <resultMap id="BaseResultMap" type="com.harmonycloud.dao.ci.bean.JobBuild">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="job_id" jdbcType="INTEGER" property="jobId" />
        <result column="build_num" jdbcType="VARCHAR" property="buildNum" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
        <result column="duration" jdbcType="VARCHAR" property="duration" />
        <result column="log" jdbcType="VARCHAR" property="log" />
        <result column="start_user" jdbcType="VARCHAR" property="startUser"/>
    </resultMap>

    <sql id="Where_Clause">
        <trim prefix="where" prefixOverrides="and">
            <if test="jobId!=null">
                AND job_id=#{jobId}
            </if>
            <if test="buildNum!=null">
                AND build_num=#{buildNum}
            </if>
        </trim>
    </sql>

    <select id="queryByObject" resultMap="BaseResultMap">
        SELECT id,job_id,build_num,status,duration,start_time,duration,start_user
        FROM cicd_job_build
        <include refid="Where_Clause" />
        ORDER BY build_num DESC
    </select>

    <select id="countByObject" resultType="java.lang.Integer">
        SELECT count(1)
        FROM cicd_job_build
        <include refid="Where_Clause" />
    </select>

    <select id="queryByObjectWithPagination" resultMap="BaseResultMap">
        SELECT id,job_id,build_num,status,duration,start_time,duration,log
        FROM cicd_job_build
        WHERE 1=1
        <if test="jobBuild.jobId!=null and jobBuild.jobId!=''"> AND job_id=#{jobBuild.jobId} </if>
        <if test="jobBuild.buildNum!=null and jobBuild.buildNum!=''"> AND build_num=#{jobBuild.buildNum} </if>
        ORDER BY build_num DESC
        LIMIT #{offset},#{rows}
    </select>

    <insert id="insert" parameterType="com.harmonycloud.dao.ci.bean.JobBuild" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO cicd_job_build(job_id,build_num,status,start_time,start_user)
        VALUE(#{jobId},#{buildNum},#{status},#{startTime},#{startUser})
    </insert>

    <update id="update" parameterType="com.harmonycloud.dao.ci.bean.JobBuild">
        UPDATE cicd_job_build
        SET status = #{status},
        start_time = #{startTime},
        duration = #{duration},
        log = #{log}
        WHERE id = #{id}
    </update>

    <update id="updateLogById" parameterType="com.harmonycloud.dao.ci.bean.JobBuild">
        UPDATE cicd_job_build
        SET log = #{log}
        WHERE id = #{id}
    </update>

    <delete id="deleteByJobId" parameterType="java.lang.Integer">
        DELETE FROM cicd_job_build WHERE job_id=#{id}
    </delete>

    <select id="queryLogByObject" resultType="java.lang.String">
        SELECT log FROM cicd_job_build
        <include refid="Where_Clause" />
    </select>

    <select id="queryLastBuildNumById" resultType="java.lang.Integer">
        SELECT build_num
        FROM cicd_job_build
        WHERE job_id=#{jobId}
        ORDER BY build_num DESC LIMIT 1
    </select>

    <select id="queryLastBuildById" resultMap="BaseResultMap">
        SELECT id,job_id,build_num,status,duration,start_time,duration,start_user
        FROM cicd_job_build
        WHERE job_id=#{jobId}
        ORDER BY build_num DESC LIMIT 1
    </select>

    <select id="queryFirstBuildById" resultMap="BaseResultMap">
        SELECT id,job_id,build_num,status,duration,start_time,duration,start_user FROM cicd_job_build
        WHERE job_id = #{jobId}
        ORDER BY build_num LIMIT 1
    </select>

    <delete id="deleteByJobIdAndBuildNum">
        DELETE FROM cicd_job_build
        WHERE job_id=#{jobId}
        AND build_num in
        <foreach collection="buildNumList" item="item" open="(" close=")" separator="," >
            #{item}
        </foreach>
    </delete>
</mapper>