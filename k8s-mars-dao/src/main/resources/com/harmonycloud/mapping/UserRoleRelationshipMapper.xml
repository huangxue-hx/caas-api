<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.harmonycloud.dao.user.UserRoleRelationshipMapper" >
    <resultMap id="BaseResultMap" type="com.harmonycloud.dao.user.bean.UserRoleRelationship" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="project_id" property="projectId" jdbcType="VARCHAR" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="has_local_role" property="hasLocalRole" jdbcType="BIT" />
        <result column="reserve1" property="reserve1" jdbcType="VARCHAR" />
        <result column="reserve2" property="reserve2" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, tenant_id, username, create_time, project_id, role_id, has_local_role, reserve1,
        reserve2
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.harmonycloud.dao.user.bean.UserRoleRelationshipExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List" />
        from user_role_relationship
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user_role_relationship
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user_role_relationship
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.harmonycloud.dao.user.bean.UserRoleRelationshipExample" >
        delete from user_role_relationship
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.harmonycloud.dao.user.bean.UserRoleRelationship" >
        insert into user_role_relationship (id, tenant_id, username,
        create_time, project_id, role_id,
        has_local_role, reserve1, reserve2
        )
        values (#{id,jdbcType=INTEGER}, #{tenantId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{projectId,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER},
        #{hasLocalRole,jdbcType=BIT}, #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.harmonycloud.dao.user.bean.UserRoleRelationship" >
        insert into user_role_relationship
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="tenantId != null" >
                tenant_id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="projectId != null" >
                project_id,
            </if>
            <if test="roleId != null" >
                role_id,
            </if>
            <if test="hasLocalRole != null" >
                has_local_role,
            </if>
            <if test="reserve1 != null" >
                reserve1,
            </if>
            <if test="reserve2 != null" >
                reserve2,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="tenantId != null" >
                #{tenantId,jdbcType=VARCHAR},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="projectId != null" >
                #{projectId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null" >
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="hasLocalRole != null" >
                #{hasLocalRole,jdbcType=BIT},
            </if>
            <if test="reserve1 != null" >
                #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test="reserve2 != null" >
                #{reserve2,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.harmonycloud.dao.user.bean.UserRoleRelationship" >
        update user_role_relationship
        <set >
            <if test="tenantId != null" >
                tenant_id = #{tenantId,jdbcType=VARCHAR},
            </if>
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="projectId != null" >
                project_id = #{projectId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null" >
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="hasLocalRole != null" >
                has_local_role = #{hasLocalRole,jdbcType=BIT},
            </if>
            <if test="reserve1 != null" >
                reserve1 = #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test="reserve2 != null" >
                reserve2 = #{reserve2,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.harmonycloud.dao.user.bean.UserRoleRelationship" >
        update user_role_relationship
        set tenant_id = #{tenantId,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        project_id = #{projectId,jdbcType=VARCHAR},
        role_id = #{roleId,jdbcType=INTEGER},
        has_local_role = #{hasLocalRole,jdbcType=BIT},
        reserve1 = #{reserve1,jdbcType=VARCHAR},
        reserve2 = #{reserve2,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateLocalRoleFlag" >
        update user_role_relationship
        set has_local_role = #{hasLocalRole,jdbcType=BIT}
        where project_id =  #{projectId,jdbcType=VARCHAR}
        <if test="usernames != null and usernames.size > 0" >
            and username in
            <foreach collection="usernames" item="username" open="(" close=")" separator="," >
                #{username}
            </foreach>
        </if>
    </update>

</mapper>