<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.harmonycloud.dao.user.UserMapper" >
  <resultMap id="BaseResultMap" type="com.harmonycloud.dao.user.bean.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="token_create" property="tokenCreate" jdbcType="TIMESTAMP" />
    <result column="is_admin" property="isAdmin" jdbcType="BIT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="is_machine" property="isMachine" jdbcType="BIT" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="pause" property="pause" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="login_fail_time" property="loginFailTime" jdbcType="VARCHAR" />
    <result column="login_fail_count" property="loginFailCount" jdbcType="INTEGER" />
    <result column="is_ldap_user" property="isLdapUser" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, token, create_time, token_create, is_admin, update_time,
    email, real_name, is_machine, comment, pause, phone, login_fail_time, login_fail_count,is_ldap_user
  </sql>
  <select id="selectLikeUsername" resultMap="BaseResultMap" parameterType="com.harmonycloud.dao.user.bean.User" >
    select
    <include refid="Base_Column_List" />
    from user where username like concat(concat('%',#{username},'%'))
  </select>

  <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from user where username=#{username};
  </select>

  <select id="findUserByEmail" parameterType="java.lang.String" resultType="com.harmonycloud.dao.user.bean.User">
    select
    <include refid="Base_Column_List" />
    from user where email = #{email};
  </select>

  <select id="selectGroupNameByUserID" resultType="java.lang.String" parameterType="java.lang.Long">
    select groupname from user_group where id=(SELECT groupid from user_group_relation where userid=#{userid})
  </select>

  <select id="findUserByToken" resultType="com.harmonycloud.dao.user.bean.User" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from user where token = #{token};
  </select>

  <select id="listMachineUsers" resultType="com.harmonycloud.dao.user.bean.User">
    select
    <include refid="Base_Column_List" />
    from user where is_machine = '1';
  </select>
  <select id="listCommonUsers" resultType="com.harmonycloud.dao.user.bean.User">
    select
    <include refid="Base_Column_List" />
    from user where is_admin != '1';
  </select>
  <select id="getUserPausedListByDepartmnet" resultType="com.harmonycloud.dao.user.bean.User" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    FROM `user` WHERE id in (SELECT userid FROM user_group_relation WHERE groupid = (SELECT id FROM user_group WHERE groupname= #{departmnet})) AND pause = 'pause';
  </select>

  <select id="getUserNormalListByDepartmnet" resultType="com.harmonycloud.dao.user.bean.User" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    FROM `user` WHERE id in (SELECT userid FROM user_group_relation WHERE groupid = (SELECT id FROM user_group WHERE groupname= #{departmnet})) AND pause = 'normal';
  </select>
  <select id="listAdmin" resultType="com.harmonycloud.dao.user.bean.User">
    select
    <include refid="Base_Column_List" />
    from user where is_admin = '1';
  </select>
  <select id="getActiveUserList" resultMap="BaseResultMap" parameterType="com.harmonycloud.dao.user.bean.User">
    select 'false' as QUERYID,id,username,password,token,create_time,token_create,is_admin,update_time,email,real_name,is_machine,comment,pause,phone,is_ldap_user from user
    WHERE ( token_create between #{leftTime} and #{rightTime}  and token_create is not null);
  </select>

  <select id="getAllUserPausedList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user where pause = 'pause';
  </select>
  <select id="getUnauthorizedUserList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user where pause = 'normal' AND username not in (select DISTINCT username  from user_role_relationship )
    AND is_admin!=1 AND pause!="pause";
  </select>
  <select id="getAllUserNormalList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user
    where pause = 'normal' AND username in (select DISTINCT username  from user_role_relationship) AND is_admin!=1 ;
  </select>
  <select id="findAthorizeByUsername" resultType="com.harmonycloud.dao.user.bean.User" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    FROM
    user
    WHERE
    pause = 'normal'
    AND is_admin = 1
    AND username = #{username}
    OR (
    username IN (
    SELECT DISTINCT
    username
    FROM
    user_role_relationship
    )
    AND pause = 'normal'
    AND is_admin != 1
    AND username = #{username}
    );
  </select>

  <select id="listAllUsers" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user where is_machine = 'false'
  </select>

  <select id="listUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user where  pause = 'normal'
      <if test="isAdmin != null" >
        and is_admin = ${isAdmin}
      </if>
      <if test="isMachine != null" >
        and is_machine = ${isMachine}
      </if>
      <if test="isCommon != null and isCommon ==true" >
        and is_admin = false and is_machine=false
      </if>
      <if test="isCommon != null and isCommon !=true" >
        and (is_admin = true or is_machine = true)
      </if>
      <if test="userIds != null and userIds.size > 0" >
        and id in
        <foreach collection="userIds" item="id" open="(" close=")" separator="," >
          #{id}
        </foreach>
      </if>
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.harmonycloud.dao.user.bean.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.harmonycloud.dao.user.bean.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.harmonycloud.dao.user.bean.User" >
    insert into user (username, password,
      token, create_time, token_create, 
      is_admin, update_time, email,
      real_name, is_machine, comment,
      pause,phone,is_ldap_user)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{token,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{tokenCreate,jdbcType=TIMESTAMP}, 
      #{isAdmin,jdbcType=BIT}, #{updateTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR},
      #{realName,jdbcType=VARCHAR}, #{isMachine,jdbcType=BIT}, #{comment,jdbcType=VARCHAR},
      #{pause,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{isLdapUser})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into user (username, password,
    token, create_time, token_create,
    is_admin, update_time, email,
    real_name, is_machine, comment,
    pause,phone,is_ldap_user)
    values
    <foreach collection="records" item="record" index="index" separator=",">
      (#{record.username,jdbcType=VARCHAR}, #{record.password,jdbcType=VARCHAR},
      #{record.token,jdbcType=VARCHAR}, #{record.createTime,jdbcType=TIMESTAMP}, #{record.tokenCreate,jdbcType=TIMESTAMP},
      #{record.isAdmin,jdbcType=BIT}, #{record.updateTime,jdbcType=TIMESTAMP}, #{record.email,jdbcType=VARCHAR},
      #{record.realName,jdbcType=VARCHAR}, #{record.isMachine,jdbcType=BIT}, #{record.comment,jdbcType=VARCHAR},
      #{record.pause,jdbcType=VARCHAR},#{record.phone,jdbcType=VARCHAR},#{record.isLdapUser,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.harmonycloud.dao.user.bean.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="tokenCreate != null" >
        token_create,
      </if>
      <if test="isAdmin != null" >
        is_admin,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="isMachine != null" >
        is_machine,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="pause != null" >
        pause,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenCreate != null" >
        #{tokenCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="isMachine != null" >
        #{isMachine,jdbcType=BIT},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="pause != null" >
        #{pause,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.harmonycloud.dao.user.bean.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenCreate != null" >
        token_create = #{tokenCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="isAdmin != null" >
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="isMachine != null" >
        is_machine = #{isMachine,jdbcType=BIT},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="pause != null" >
        pause = #{pause,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.harmonycloud.dao.user.bean.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      token_create = #{tokenCreate,jdbcType=TIMESTAMP},
      is_admin = #{isAdmin,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      is_machine = #{isMachine,jdbcType=BIT},
      comment = #{comment,jdbcType=VARCHAR},
      pause = #{pause,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      login_fail_time = #{loginFailTime,jdbcType=VARCHAR},
      login_fail_count = #{loginFailCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateUserByUsername" parameterType="com.harmonycloud.dao.user.bean.User">
    update user
    <set >
      <if test="password!=null">password=#{password},</if>
      <if test="token!=null">token=#{token,jdbcType=VARCHAR},</if>
      <if test="createTime!=null">create_time=#{createTime,jdbcType=TIMESTAMP},</if>
      <if test="tokenCreate!=null">token_create=#{tokenCreate,jdbcType=TIMESTAMP},</if>
      <if test="isAdmin!=null">is_admin=#{isAdmin},</if>
      <if test="updateTime!=null">update_time=#{updateTime,jdbcType=TIMESTAMP},</if>
      <if test="email!=null">email=#{email,jdbcType=VARCHAR},</if>
      <if test="realName!=null">real_name=#{realName},</if>
      <if test="isMachine!=null">is_machine=#{isMachine},</if>
      <if test="comment!=null">comment=#{comment,jdbcType=VARCHAR}</if>
      <if test="pause!=null">pause=#{pause,jdbcType=VARCHAR}</if>
      <if test="phone!=null">phone=#{phone,jdbcType=VARCHAR}</if>
    </set>
    WHERE username=#{username}
  </update>

  <update id="updatePassword">
    update user set password = #{password,jdbcType=VARCHAR} where username=#{username,jdbcType=VARCHAR}
  </update>

  <delete id="deleteUserByName" parameterType="java.lang.String">
    delete from user where username=#{username}
  </delete>
  <select id="listUserByProjectId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select distinct user.id, user.username, user.real_name from user_role_relationship
    join user on user_role_relationship.username=user.username
    and user_role_relationship.project_id=#{projectId}
    order by username
  </select>
</mapper>