<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.harmonycloud.dao.ci.DockerFileMapper">
    <resultMap id="BaseResultMap" type="DockerFile" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="tenant" property="tenant" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List">
        id, name, tenant, content, create_time, update_time
    </sql>

    <select id="findByAll" resultMap="BaseResultMap" parameterType="DockerFile">
        SELECT
        <include refid="Base_Column_List"/>
        FROM cicd_docker_file
        <trim prefix="where" prefixOverrides="and">
            <if test="name!=null and name!=''">
                AND name LIKE  CONCAT('%', #{name}, '%')
            </if>
            <if test="tenant!=null and tenant!=''">
                AND tenant = #{tenant}
            </if>
        </trim>
    </select>

    <select id="findPageByAll" resultType="com.harmonycloud.dao.ci.bean.DockerFilePage" parameterType="DockerFile">
        SELECT df.id id,df.name name,GROUP_CONCAT(cj.name) jobNames,
        GROUP_CONCAT(cs.stage_name) stageNames,GROUP_CONCAT(cs.id) stageIds,
        df.create_time createTime,df.update_time updateTime
        FROM cicd_docker_file df
        LEFT JOIN cicd_docker_file_job_stage dfj ON df.id=dfj.docker_file_id
        LEFT JOIN cicd_job cj ON cj.id=dfj.job_id
        LEFT JOIN cicd_stage cs ON cs.id=dfj.stage_id
        <trim prefix="where" prefixOverrides="and">
            <if test="name!=null and name!=''">
                AND df.name LIKE  CONCAT('%', #{name}, '%')
            </if>
            <if test="tenant!=null and tenant!=''">
                AND df.tenant = #{tenant}
            </if>
        </trim>
        group by df.id
    </select>

    <insert id="insertDockerFile" parameterType="DockerFile" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO cicd_docker_file
        (name,tenant,content,create_time,update_time)
        VALUE (#{name},#{tenant},#{content},now(),now())
    </insert>
    <update id="updateDockerFile" parameterType="DockerFile">
        UPDATE cicd_docker_file
        <trim prefix="set" suffixOverrides=",">
            update_time = now(),
            <if test="name!=null and name!=''">
                name = #{name},
            </if>
            <if test="content!=null and content!=''">
                content = #{content},
            </if>
        </trim>
        WHERE id = #{id}
    </update>
    <delete id="deleteDockerFile" parameterType="DockerFile">
        DELETE FROM cicd_docker_file where id = #{id} AND tenant = #{tenant}
    </delete>

    <select id="selectNameAndTenant" resultMap="BaseResultMap" parameterType="DockerFile">
        SELECT
        <include refid="Base_Column_List"/>
        FROM cicd_docker_file
        <trim prefix="where" prefixOverrides="and">
            <if test="name!=null and name!=''">
                AND name = #{name}
            </if>
            <if test="tenant!=null and tenant!=''">
                AND tenant = #{tenant}
            </if>
        </trim>
    </select>

    <select id="selectDockerFile" resultMap="BaseResultMap" parameterType="DockerFile">
        SELECT
        <include refid="Base_Column_List"/>
        FROM cicd_docker_file
        <trim prefix="where" prefixOverrides="and">
            <if test="name!=null and name!=''">
                AND name = #{name}
            </if>
            <if test="id!=null and id!=''">
                AND id = #{id}
            </if>
        </trim>
    </select>
</mapper>
