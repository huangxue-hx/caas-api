2.1.0版本升级步骤

1.	更新kubelet
更新 /usr/bin/kubelet 文件，并重启kubelet
--------------------------------------------------------------------
2.	升级heapster镜像
Heapster镜像版本为1.2.0m
修改heapster的deployment的镜像版本，
并将--source的值修改为kubernetes.summary_api:https://kubernetes.default
--------------------------------------------------------------------
3.	执行数据库表数据及结构变更sql
执行db-upgrade-oam-v2.1.0.sql， db-upgrade-webapi-v2.1.0.sql
--------------------------------------------------------------------
4.	更新配置文件
webapi-configmap.yaml
webpage-cloudterminal-config.yaml
需要替换配置文件中的ip为上层集群的masterip，重新创建配置。
创建配置文件 ingresscontroller-config.yaml
--------------------------------------------------------------------
5.	Harbor仓库增加镜像
k8s-deploy/alpine-net:1.0
k8s-deploy/alpine-gitsvn:1.0
k8s-deploy/nfs-client-provisioner:v2.1.0
k8s-deploy/rbd-provisioner:latest
k8s-deploy/centos:7
k8s-deploy/busybox:latest
--------------------------------------------------------------------
6. 	更新文件上传镜像centos
centos镜像版本为7
kubectl edit deploy file-upload -n kube-system 修改镜像版本为7
修改command命令：
command: ["tail","-f","/etc/hosts"]
--------------------------------------------------------------------
7.	增加集群nfs配额
更新cluster，增加 nfs的capacity属性, 1表示1TB，即该集群使用nfs的总容量是1TB
查看所有集群： kubectl get cluster --all-namespaces
修改集群： kubectl edit cluster dev -n cluster-top
nfs:
    - capacity: "1"
      ip: 192.168.26.46
      name: nfs
      path: /nfs/top
      type: nfs
--------------------------------------------------------------------
8.	更新webapi，webpage和oam的镜像
镜像版本为v2.1.0，更新webapi，webpage，oam-api，oam-task的deploy的镜像版本

--------------------------------------------------------------------
9.  更新kube-controller-manager配置
kube-controller-manager.yaml的启动命令中增加一行配置
- --feature-gates=VolumeScheduling=false
重启kube-controller-manager
--------------------------------------------------------------------

其他定制修改,非必须

1.	更改kubelet目录
通过--root-dir修改kubelet目录，修改了kubelet目录，fluentd需要增加kubelet的pods目录的挂载，才能读取日志文件
修改部署脚本目录下deploy-log目录中fluentd-daemonset.yaml文件，修改applog对应的kubelet目录，以下标红部分：
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd-es-v1.22
  namespace: kube-system
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    version: v1.22
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-es
        kubernetes.io/cluster-service: "true"
        version: v1.22
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd-es
        image: k8s-deploy/fluentd-elasticsearch:v1.22-1
        command:
          - '/bin/sh'
          - '-c'
          - '/run.sh'
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 512Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: applog
          mountPath: /var/lib/kubelet/pods
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: hn
          mountPath: /etc/hostip
        - name: tls-files
          mountPath: /etc/kubernetes/pki
        - mountPath: /etc/localtime
          name: synctimezone-fluentd
          readOnly: true
        - mountPath: /etc/td-agent
          name: fluentd
      nodeSelector:
        alpha.kubernetes.io/fluentd-ds-ready: "true"
      #terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: applog
        hostPath:
          path: /var/lib/kubelet/pods
      - name: hn
        hostPath:
          path: /etc/hostname
      - name: tls-files
        hostPath:
          path: /etc/kubernetes/pki
      - hostPath:
          path: /etc/localtime
          type: ""
        name: synctimezone-fluentd
      - configMap:
          name: fluentd
        name: fluentd

修改之后通过下面命令重启fluentd
kubectl delete -f fluentd-daemonset.yaml
kubectl create -f fluentd-daemonset.yaml

--------------------------------------------------sprint1--------------------------------------------------------
1.执行db-upgrade-oam-v1.1.0.sql, db-upgrade-webapi-v1.1.0.sql脚本中的sprint1部分的sql
2.webapi-pv对应的nfs目录下创建appimages目录，将appimages下的图片上传到该路径下
3.webapi-config配置文件中api.url.whitelist增加白名单*/appimages/*, 删除除sso.open外的sso配置
4.增加web.xml配置文件， kubectl create -f webapi-cm-web.xml, 修改webapi的deploy的yaml文件增加该配置挂载

--------------------------------------------------sprint2--------------------------------------------------------
1.webapi-config配置文件中ic.image.tag配置改成:0.9.0-beta.19， upload.path改成/usr/local/k8s-mars-api/fsfiles/
2.webapi-deployment.yaml 文件的webapi-storage的mountPath路径改为/usr/local/k8s-mars-api/fsfiles

--------------------------------------------------sprint3--------------------------------------------------------
1.执行db-upgrade-oam-v1.1.0.sql, db-upgrade-webapi-v1.1.0.sql脚本中的sprint3部分的sql
2.执行日志收集及es版本升级操作文档步骤
3.执行mixer日志收集插件部署文档步骤
4.更新webapi-configmap.yaml
-------------------------------------sprint-test1----------------------------------------------
1.oam增加配置
  spring.redis.host=api-redis-service
  spring.redis.password=123456
  spring.redis.port=6379
2.Harbor仓库增加镜像 k8s-deploy/nfs-client-provisioner:v3.1.0
3.数据迁移步骤中所有创建的storageclass的yaml中增加parameters:archiveOnDelete:"false",如下
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    NFSADDR: 10.10.100.101
    NFSPATH: /tst_caas_dev00
    storageLimit: "10"
    storageUsed: usedNum
    type: NFS
  name: scname
provisioner: nfs-client-provisioner-scname
reclaimPolicy: Delete
parameters:
  archiveOnDelete: "false"
4.数据迁移步骤中所有对应的nfs-client-provisioner中的镜像版本换成v3.1.0

-------------------------------------sprint-test2----------------------------------------------
1.webapi-config配置文件中增加配置harbor.role.enable=false
2.更新webpage-cloudterminal-config.yaml 配置文件

--------------------------20190218-----------------------------------------
1. oam数据库脚本更新 执行 db-upgrade-oam-v1.1.0.sql --20190218下的脚本
2. 修改autoscale-controller，执行autoscale-controller流水线